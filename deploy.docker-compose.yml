version: '3.7'
services:
  # You should only need to run this service
  deploy:
    build: 
      context: .
      dockerfile: deploy.Dockerfile 
      args:
        TERRAFORM_VERSION: ${TERRAFORM_VERSION} #Comes from .env file
    entrypoint: 'sh -c ''set -eux && terraform init -input=false && terraform workspace select production && terraform $${0} "$$@" -var "project_name=$$PROJECT_NAME" -var "build=out" -var "stage=prod"'''
    # Init and apply, specifying the directory to take the files from as /app/out
    command: "apply -input=false -auto-approve"
    working_dir: /app
    environment:
      - AWS_SECRET_KEY_ID=${AWS_SECRET_KEY_ID?You must set the environment variable AWS_SECRET_KEY_ID}
      - AWS_ACCESS_KEY_ID=${AWS_SECRET_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY?You must set the environment variable AWS_SECRET_ACCESS_KEY}
      - NODE_VERSION=${NODE_VERSION}
    volumes:
      - .:/app
      - out:/app/out
      - /var/run/docker.sock:/var/run/docker.sock
      - terraform:/app/.terraform
  # You shouldn't need to run this as it is called by main.tf
  # TODO: Just do this running docker commands in main.tf
  build:
    build:
      context: .
      target: export
      args:
        NODE_VERSION: ${NODE_VERSION} #Comes from .env file
        COGNITO_HOST: ${COGNITO_HOST}
        CLIENT_ID: ${CLIENT_ID}
        REDIRECT_URL: ${REDIRECT_URL}
        USER_API_URL: ${USER_API_URL}
    volumes:
      - out:/app/out-shared
    command: |
      sh -c " \
        rm -rf out-shared/* && \
        cp -rf out/* out-shared/"
volumes:
  out:
  terraform:

    